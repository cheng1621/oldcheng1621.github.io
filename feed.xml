<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://cheng1621.github.io//</id><title>HelloBen</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-01-05T14:07:13+08:00</updated> <author> <name>BenchengSu</name> <uri>https://cheng1621.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://cheng1621.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://cheng1621.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 BenchengSu </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>System Design</title><link href="https://cheng1621.github.io//posts/systemdesign/" rel="alternate" type="text/html" title="System Design" /><published>2021-12-26T08:10:10+08:00</published> <updated>2021-12-26T08:10:10+08:00</updated> <id>https://cheng1621.github.io//posts/systemdesign/</id> <content src="https://cheng1621.github.io//posts/systemdesign/" /> <author> <name>BenchengSu</name> </author> <category term="System Design" /> <summary> Requirement. (design intagram) users upload and download videos/photos/text user could follower other users. user could search the keyword. (return the phonts) system generate new feeds for different users. nonfunctional-requirement. system should be hightly available. the acceptable latency should be less than 200 ms. consistency could take a hit if user doesn’t see a photo f... </summary> </entry> <entry><title>Design Parking Lot</title><link href="https://cheng1621.github.io//posts/OOD_Design/" rel="alternate" type="text/html" title="Design Parking Lot" /><published>2021-12-21T19:10:10+08:00</published> <updated>2022-01-05T12:46:38+08:00</updated> <id>https://cheng1621.github.io//posts/OOD_Design/</id> <content src="https://cheng1621.github.io//posts/OOD_Design/" /> <author> <name>BenchengSu</name> </author> <category term="OOD" /> <summary> Design Parking Lot. System Requirement. parking lot should have multiple floors, floors contain multiple spots. multiple entry and exit points. (implement later). customer get a ticket from entry point and return ticket at the exit point. payment can be in cash and via credit card. classDiagram class Vehicletype { &amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt; Car Truck ... </summary> </entry> <entry><title>frangipani</title><link href="https://cheng1621.github.io//posts/Frangipani/" rel="alternate" type="text/html" title="frangipani" /><published>2021-12-06T19:10:10+08:00</published> <updated>2021-12-22T16:07:32+08:00</updated> <id>https://cheng1621.github.io//posts/Frangipani/</id> <content src="https://cheng1621.github.io//posts/Frangipani/" /> <author> <name>BenchengSu</name> </author> <category term="frangipani" /> <summary> Introduction Logging and Recovery. when work station starts to update something on the file, write-ahead log is implemented in two places. first is the cache in the work station, and the other one is in the Petal. When work station1 crashes, but before releasing the lock (means the data after updated is still in work station1’s cache), another work station2 could see the log of WS1 and can... </summary> </entry> <entry><title>Low-Latency Multi-Datacenter Databases using Replicated Commit Note</title><link href="https://cheng1621.github.io//posts/lowLatency_MultiDatacenter_Databases_Using_Replicated_Commit/" rel="alternate" type="text/html" title="Low-Latency Multi-Datacenter Databases using Replicated Commit Note" /><published>2021-11-26T08:10:10+08:00</published> <updated>2021-12-22T16:07:32+08:00</updated> <id>https://cheng1621.github.io//posts/lowLatency_MultiDatacenter_Databases_Using_Replicated_Commit/</id> <content src="https://cheng1621.github.io//posts/lowLatency_MultiDatacenter_Databases_Using_Replicated_Commit/" /> <author> <name>BenchengSu</name> </author> <category term="Distributed System" /> <summary> Abstract. Instead of replicating the transactional log, we replicate the commit operation itself, by running Two-Phase Commit multiple times in different datacenters and using Paxos to reach consensus among datacenters as to whether the transaction should commit. Motivaiton cross-datacenter one-way trip. inform the cohorts where the coordinator is. cross-datacenter roundtrip. Paxos leade... </summary> </entry> <entry><title>kafka Note</title><link href="https://cheng1621.github.io//posts/kafka_note/" rel="alternate" type="text/html" title="kafka Note" /><published>2021-11-05T08:10:10+08:00</published> <updated>2021-11-05T08:10:10+08:00</updated> <id>https://cheng1621.github.io//posts/kafka_note/</id> <content src="https://cheng1621.github.io//posts/kafka_note/" /> <author> <name>BenchengSu</name> </author> <category term="kafka" /> <summary> Introduction. Implemented in PacificA. Design Persistence. pagecache-centric design and zero copy. constant time suffice. instead of using B-Tree, persistence queue is being built. O(1). Note: we can keep the message as long as we want. Efficiency. group the message together before sending it to the internet. zero copy. producer &amp;amp; consumer. poll for producer and pull for consumer.... </summary> </entry> </feed>
